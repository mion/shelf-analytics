FUTURE
- We will want ROIs to be polygons instead of rectangles to increase accuracy.
- We will want detected rectangles to be polygons or even masks (if using MaskRCNN) to increase accuracy.

--------------------------------------------------------------------------------
QUESTIONS
- Why rename 'bounding box' to 'detected rectangle'?
- Why return a PostDetectionVideo instead of just the frames?
- Why return a TrackingResult instead of just the Tracks?
- Why not restructure PostDetectionVideo as DetectionResult and use composition?
- Change event 'type' to 'kind' to avoid the keyword name clash?
- Why not return a EventExtractionResult instead of just the list of events?
- What is the best data representation to use for the ROIs?
- When to use abbreviations of classes for the argument names in function headers?

--------------------------------------------------------------------------------
FUNCTIONS

main(video, ROIs, params) -> list of events

  load_video(path) -> Video
  detect(Video, config, params) -> post detection video
  filter_detected_rectangles(post detection video, list of filters) -> post detection video
  track_humans(post detection video, params) -> tracking result
  extract_events(tracking result, ROIs, params) -> list of events

--------------------------------------------------------------------------------
DATA DEFINITIONS

Transition is an enum: 'first', 'snapped', 'tracked', 'retaken', 'interpolated'

Track is a list of (pdframe_index, drect_index, trans)

PostDetectionVideo is a Video:
- detected_rectangles_by_frame : [[DetectedRectangle]]

DetectedRectangle is a Rectangle:
- class : str
- score : float

Video is a structure:
- frames : [Frames]

A Frame is a structure:
- image : numpy image

Rectangle is a structure:
- x : int
- y : int
- width : int
- height : int

ROIs (Region of Interest) is a dictionary:
- name : string -> (rectangle, list of event types)

Calibration parameters is a dictionary

An Event is a structure:
- type : string
- frame_index : int
- roi_name : string

A WalkEvent is an Event:
- type = "walk"

An InteractEvent is an Event:
- type = "interact"

A PonderEvent is an Event:
- type = "ponder"
- duration: int
